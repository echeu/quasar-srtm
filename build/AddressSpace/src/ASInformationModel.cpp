
/*  Â© Copyright CERN, 2015. All rights not expressly granted are reserved.

    This file was generated by quasar (https://github.com/quasar-team/quasar/)

    Quasar is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public Licence as published by
    the Free Software Foundation, either version 3 of the Licence.
    Quasar is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public Licence for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Quasar.  If not, see <http://www.gnu.org/licenses/>.

 */


#include <string>

#include <ASInformationModel.h>
#include <LogIt.h>

namespace AddressSpace
{

void ASInformationModel::createNodesOfTypes (ASNodeManager *nm)
{
#ifndef BACKEND_OPEN62541  // TODO: @pnikiel: we actually could make it work for open62541 as well!
    UaObjectTypeSimple * type;
    UaStatus addStatus;
    type = new UaObjectTypeSimple ("Regs", UaNodeId(AS_TYPE_REGS, nm->getNameSpaceIndex()), /* locale id*/UaString(""), /*is abstract*/OpcUa_False);
    addStatus = nm->addNodeAndReference(OpcUaId_BaseObjectType, type, OpcUaId_HasSubtype);
    if (!addStatus.isGood())
    {
        LOG(Log::ERR) << "While adding a type definition node: " << addStatus.toString().toUtf8();
        throw std::runtime_error (std::string("in ASInformationModel::createNodesOfTypes: ") + addStatus.toString().toUtf8());
    }
#endif // BACKEND_OPEN62541
}

}