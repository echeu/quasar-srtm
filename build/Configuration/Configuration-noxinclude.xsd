<?xml version="1.0" encoding="UTF-8"?>





<xs:schema xmlns:tns="http://cern.ch/quasar/Configuration"
  xmlns:xi="http://www.w3.org/2003/XInclude"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:d="http://cern.ch/quasar/Design"
  xmlns:fnc="http://cern.ch/quasar/Functions"
  targetNamespace="http://cern.ch/quasar/Configuration"
  elementFormDefault="qualified">

  <!--meta schema location comes via python transform parameter -->  
  <xi:include href="/home/root/quasar/opcua-server/Meta/config/Meta.xsd" xpointer="xmlns(xs=http://www.w3.org/2001/XMLSchema) xpointer(/xs:schema/node())"/>

  <xs:simpleType name="ObjectName">
    <xs:restriction base="xs:string">
      <xs:minLength value="1"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="CalculatedVariable">
    <xs:attribute name="name" type="tns:ObjectName" use="required"/>
    <xs:attribute name="value" type="xs:string" use="required"/>
    <xs:attribute name="initialValue" type="xs:double" use="optional"/>
    <xs:attribute name="isBoolean" type="xs:boolean" use="optional" default="false"/>
    <xs:attribute name="status" type="xs:string" use="optional"/>
  </xs:complexType>

  <xs:complexType name="CalculatedVariableGenericFormula">
    <xs:attribute name="name" type="tns:ObjectName" use="required"/>
    <xs:attribute name="formula" type="xs:string" use="required"/>
  </xs:complexType>
  
  <xs:complexType name="FreeVariable">
    <xs:attribute name="name" type="tns:ObjectName" use="required"/>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="Boolean"/>
          <xs:enumeration value="Byte"/>
          <xs:enumeration value="SByte"/>
          <xs:enumeration value="UInt16"/>
          <xs:enumeration value="Int16"/>
          <xs:enumeration value="UInt32"/>
          <xs:enumeration value="Int32"/>
          <xs:enumeration value="UInt64"/>
          <xs:enumeration value="Int64"/>
          <xs:enumeration value="Double"/>
          <xs:enumeration value="Float"/>
          <xs:enumeration value="String"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="initialValue" type="xs:string" use="optional"/>
  </xs:complexType>
 
  <xs:complexType name="Regs">
   
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="CalculatedVariable" type="tns:CalculatedVariable" />
        <xs:element name="FreeVariable" type="tns:FreeVariable" />
        	  </xs:choice>
    
	    <!-- processing array cache vars (by configuration) for class [Regs] -->
	    
	    <!-- processing array config entries for class [Regs] -->
	    	    
    </xs:sequence>
    
    <xs:attribute name="name" type="tns:ObjectName" use="required"/>
    
    <!-- processing scalar cache vars for class [Regs] -->
        
    <!-- processing scalar config entries for class [Regs] -->
                            <!-- add scalarConfigEntry name [address] type [xs:unsignedInt] restriction count [0] -->
              <xs:attribute name="address"     use="required"
   type="xs:unsignedInt" >
          
            </xs:attribute>   
        
        
  </xs:complexType>

<xs:complexType name="Configuration">
  <xs:sequence>
    <xs:choice minOccurs="0" maxOccurs="1">
      <xs:element name="StandardMetaData" type="tns:StandardMetaData"/>
    </xs:choice>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="CalculatedVariableGenericFormula" type="tns:CalculatedVariableGenericFormula"/>
    </xs:choice>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
              <xs:element name="Regs" type="tns:Regs" />
          </xs:choice>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element name="CalculatedVariable" type="tns:CalculatedVariable"/>
      <xs:element name="FreeVariable" type="tns:FreeVariable" />
    </xs:choice>
  </xs:sequence>
</xs:complexType>
<xs:element name="configuration" type="tns:Configuration"/>

 </xs:schema>