/*  Â© Copyright CERN, 2015. All rights not expressly granted are reserved.

    This file was generated by quasar (https://github.com/quasar-team/quasar/)

    Quasar is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public Licence as published by
    the Free Software Foundation, either version 3 of the Licence.
    Quasar is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public Licence for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Quasar.  If not, see <http://www.gnu.org/licenses/>.

 */




#include <iostream>

#include <ASUtils.h>
#include <ASInformationModel.h>

#include <Utils.h>

#include <DRoot.h>

#include <Configurator.h>
#include <Configuration.hxx>

#include "DRegs.h"


// validator function signatures
bool validateRegs(Device::DRegs* object);

// validator function bodies
bool validateRegs(Device::DRegs* object)
{

    return true;
}



// root validator bodies
bool validateRootHasRegs(Device::DRoot* object)
{
    const size_t size = object->regss().size();
    (void)size;
    for(auto *child : object->regss())
    {
        validateRegs(child);
    }

    return true;
}


bool validateRoot (Device::DRoot * root)
{
    validateRootHasRegs(root);
    return true; /* assume improper config throws */
}

// entry point to tree of validation functions
bool validateDeviceTree ()
{
    Device::DRoot *deviceRoot = Device::DRoot::getInstance();
    return validateRoot( deviceRoot );
}